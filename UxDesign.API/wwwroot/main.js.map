{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_guards/prevent-unsaved-changes.guard.ts","webpack:///./src/app/_models/pagination.ts","webpack:///./src/app/_resolvers/blog-detail.resolver.ts","webpack:///./src/app/_resolvers/blog-list.resolver.ts","webpack:///./src/app/_resolvers/lists.resolver.ts","webpack:///./src/app/_resolvers/member-detail.resolver.ts","webpack:///./src/app/_resolvers/member-edit.resolver.ts","webpack:///./src/app/_resolvers/member-list.resolver.ts","webpack:///./src/app/_resolvers/messages.resolver.ts","webpack:///./src/app/_resolvers/portfolio-detail.resolver.ts","webpack:///./src/app/_resolvers/portfolio-list.resolver.ts","webpack:///./src/app/_services/alertify.service.ts","webpack:///./src/app/_services/auth.service.ts","webpack:///./src/app/_services/blog.service.ts","webpack:///./src/app/_services/error.interceptor.ts","webpack:///./src/app/_services/portfolio.service.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/contact/contact.component.css","webpack:///./src/app/contact/contact.component.html","webpack:///./src/app/contact/contact.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/lists/lists.component.css","webpack:///./src/app/lists/lists.component.html","webpack:///./src/app/lists/lists.component.ts","webpack:///./src/app/members/member-card/member-card.component.css","webpack:///./src/app/members/member-card/member-card.component.html","webpack:///./src/app/members/member-card/member-card.component.ts","webpack:///./src/app/members/member-detail/member-detail.component.css","webpack:///./src/app/members/member-detail/member-detail.component.html","webpack:///./src/app/members/member-detail/member-detail.component.ts","webpack:///./src/app/members/member-edit/member-edit.component.css","webpack:///./src/app/members/member-edit/member-edit.component.html","webpack:///./src/app/members/member-edit/member-edit.component.ts","webpack:///./src/app/members/member-list/member-list.component.css","webpack:///./src/app/members/member-list/member-list.component.html","webpack:///./src/app/members/member-list/member-list.component.ts","webpack:///./src/app/members/member-messages/member-messages.component.css","webpack:///./src/app/members/member-messages/member-messages.component.html","webpack:///./src/app/members/member-messages/member-messages.component.ts","webpack:///./src/app/members/photo-editor/photo-editor.component.css","webpack:///./src/app/members/photo-editor/photo-editor.component.html","webpack:///./src/app/members/photo-editor/photo-editor.component.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/myblog/blog-detail/blog-detail.component.css","webpack:///./src/app/myblog/blog-detail/blog-detail.component.html","webpack:///./src/app/myblog/blog-detail/blog-detail.component.ts","webpack:///./src/app/myblog/blog-list/blog-list.component.css","webpack:///./src/app/myblog/blog-list/blog-list.component.html","webpack:///./src/app/myblog/blog-list/blog-list.component.ts","webpack:///./src/app/myblog/blog-new/blog-new.component.css","webpack:///./src/app/myblog/blog-new/blog-new.component.html","webpack:///./src/app/myblog/blog-new/blog-new.component.ts","webpack:///./src/app/myportfolio/myportfolio-detail/myportfolio-detail.component.css","webpack:///./src/app/myportfolio/myportfolio-detail/myportfolio-detail.component.html","webpack:///./src/app/myportfolio/myportfolio-detail/myportfolio-detail.component.ts","webpack:///./src/app/myportfolio/myportfolio-list/myportfolio-list.component.css","webpack:///./src/app/myportfolio/myportfolio-list/myportfolio-list.component.html","webpack:///./src/app/myportfolio/myportfolio-list/myportfolio-list.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/app/value/value.component.css","webpack:///./src/app/value/value.component.html","webpack:///./src/app/value/value.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { AlertifyService } from './../_services/alertify.service';\nimport { AuthService } from './../_services/auth.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n @Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router, private alertify: AlertifyService) {}\n   canActivate(): boolean {\n    if (this.authService.loggedIn()) {\n    return true;\n    }\n    this.alertify.error('You shall not pass!!!');\n   this.router.navigate(['/home']);\n   return false;\n  }\n}\n\n","import { Injectable } from '@angular/core';\r\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\r\nimport { CanDeactivate } from '@angular/router';\r\n\r\n@Injectable()\r\n\r\nexport class PreventUnsavedChanges implements CanDeactivate<MemberEditComponent> {\r\n   canDeactivate(component: MemberEditComponent) {\r\n       if (component.editForm.dirty) {\r\n            return confirm('Are you sure you want to continue? Any unsaved changes will be lost');\r\n       }\r\n       return true;\r\n   }\r\n}\r\n\r\n","export interface Pagination {\n    currentPage: number;\n    itemsPerPage: number;\n    totalItems: number;\n    totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n    result: T;\n    pagination: Pagination;\n}\n","import { catchError } from 'rxjs/operators';\r\nimport { AlertifyService } from './../_services/alertify.service';\r\nimport { BlogService } from './../_services/blog.service';\r\nimport { Blog } from './../_models/blog';\r\nimport {Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class BlogDetailResolver implements Resolve<Blog> {\r\n\r\n    constructor(private blogService: BlogService,\r\n        private router: Router, private alertify: AlertifyService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<Blog> {\r\n        return this.blogService.getOne(route.params['id']).pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retrieving data');\r\n                this.router.navigate(['/blog']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\n","import { catchError } from 'rxjs/operators';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { BlogService } from '../_services/blog.service';\r\nimport { Blog } from '../_models/blog';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport {Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class BlogListResolver implements Resolve<Blog[]> {\r\n    constructor(private blogService: BlogService,\r\n        private router: Router, private alertify: AlertifyService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<Blog[]> {\r\n        return this.blogService.getAll().pipe(\r\n            catchError(error => {\r\n                this.alertify.error('Problem retrieving data');\r\n                this.router.navigate(['/home']);\r\n                return of(null);\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/user';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ListsResolver implements Resolve<User[]> {\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    likesParam = 'Likers';\r\n\r\n    constructor(private userService: UserService, private router: Router,\r\n        private alertify: AlertifyService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n        return this.userService.getUsers(this.pageNumber,\r\n             this.pageSize, null, this.likesParam).pipe(\r\n                catchError(error => {\r\n                    this.alertify.error('Problem retrieving data');\r\n                    this.router.navigate(['/home']);\r\n                    return of(null);\r\n                })\r\n            );\r\n    }\r\n}\r\n\r\n","import { AlertifyService } from '../_services/alertify.service';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/user';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberDetailResolver implements Resolve<User> {\r\n    constructor(private userService: UserService,\r\n         private router: Router, private alertify: AlertifyService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n       return this.userService.getUser(route.params['id']).pipe(\r\n          catchError(error => {\r\n              this.alertify.error('Problem retrieving data');\r\n              this.router.navigate(['/members']);\r\n              return of(null);\r\n          })\r\n       );\r\n    }\r\n}\r\n\r\n","import { AuthService } from './../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/user';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberEditResolver implements Resolve<User> {\r\n    constructor(private userService: UserService, private authService: AuthService,\r\n         private router: Router, private alertify: AlertifyService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User> {\r\n       return this.userService.getUser(this.authService.decodedToken.nameid).pipe(\r\n          catchError(error => {\r\n              this.alertify.error('Problem retrieving your data');\r\n              this.router.navigate(['/members']);\r\n              return of(null);\r\n          })\r\n       );\r\n    }\r\n}\r\n\r\n","import { AlertifyService } from '../_services/alertify.service';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/user';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MemberListResolver implements Resolve<User[]> {\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n\r\n    constructor(private userService: UserService,\r\n         private router: Router, private alertify: AlertifyService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<User[]> {\r\n       return this.userService.getUsers(this.pageNumber, this.pageSize).pipe(\r\n          catchError(error => {\r\n              this.alertify.error('Problem retrieving data');\r\n              this.router.navigate(['/home']);\r\n              return of(null);\r\n          })\r\n       );\r\n    }\r\n}\r\n\r\n","import { AuthService } from './../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\nimport { UserService } from '../_services/user.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, Router, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { User } from '../_models/user';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Message } from '../_models/Message';\r\n\r\n@Injectable()\r\nexport class MessagesResolver implements Resolve<Message[]> {\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    messageContainer = 'Unread';\r\n\r\n    constructor(private userService: UserService, private authService: AuthService,\r\n         private router: Router, private alertify: AlertifyService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<Message[]> {\r\n       return this.userService.getMessages(this.authService.decodedToken.nameid,\r\n        this.pageNumber, this.pageSize, this.messageContainer).pipe(\r\n          catchError(error => {\r\n              this.alertify.error('Problem retrieving messages');\r\n              this.router.navigate(['/home']);\r\n              return of(null);\r\n          })\r\n       );\r\n    }\r\n}\r\n\r\n","import { AlertifyService } from '../_services/alertify.service';\r\nimport { PortfolioService } from '../_services/portfolio.service';\r\nimport { Portfolio } from '../_models/portfolio';\r\nimport {Injectable } from '@angular/core';\r\nimport { Router, Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class PortfolioDetailResolver implements Resolve<Portfolio> {\r\n\r\n    constructor(private portfolioService: PortfolioService,\r\n        private router: Router, private alertify: AlertifyService) {}\r\n\r\n     resolve(route: ActivatedRouteSnapshot): Observable<Portfolio> {\r\n         return this.portfolioService.getPort(route.params['id']).pipe(\r\n             catchError(error => {\r\n                 this.alertify.error('Problem retrieving your data');\r\n                 this.router.navigate(['/portfolio']);\r\n                 return of(null);\r\n             })\r\n         );\r\n     }\r\n}\r\n\r\n","import { AlertifyService } from './../_services/alertify.service';\r\nimport { PortfolioService } from './../_services/portfolio.service';\r\nimport { Portfolio } from './../_models/portfolio';\r\nimport {Injectable } from '@angular/core';\r\nimport { Router, Resolve, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class PortfolioListResolver implements Resolve<Portfolio[]> {\r\n\r\n    constructor(private portfolioService: PortfolioService,\r\n        private router: Router, private alertify: AlertifyService) {}\r\n\r\n     resolve(route: ActivatedRouteSnapshot): Observable<Portfolio[]> {\r\n         return this.portfolioService.getPortfolios().pipe(\r\n             catchError(error => {\r\n                 this.alertify.error('Problem retrieving your data');\r\n                 this.router.navigate(['/portfolio']);\r\n                 return of(null);\r\n             })\r\n         );\r\n     }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\ndeclare let alertify: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n\nconstructor() { }\n\n   confirm(message: string, okCallback: () => any) {\n       alertify.confirm(message, function(e) {\n         if (e) {\n           okCallback();\n         } else {}\n       });\n   }\n\n   success(message: string) {\n     alertify.success(message);\n   }\n\n   error(message: string) {\n     alertify.error(message);\n   }\n\n   warning(message: string) {\n     alertify.warning(message);\n   }\n   message(message: string) {\n     alertify.message(message);\n   }\n}\n","import { environment } from '../../environments/environment';\nimport { Injectable} from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  baseUrl = environment.apiUrl + 'auth/';\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n  currentUser: User;\n  photoUrl = new BehaviorSubject<string>('../../assets/user.png');\n  currentPhotoUrl = this.photoUrl.asObservable();\n\nconstructor(private http: HttpClient) { }\n\n   changeMemberPhoto(photoUrl: string) {\n      this.photoUrl.next(photoUrl);\n   }\n\n    login(model: any) {\n      return this.http.post(this.baseUrl + 'login', model)\n      .pipe(\n      map((response: any) => {\n         const user = response;\n         if (user) {\n           localStorage.setItem('token', user.token);\n           localStorage.setItem('user', JSON.stringify(user.user));\n           this.decodedToken = this.jwtHelper.decodeToken(user.token);\n           this.currentUser = user.user;\n           this.changeMemberPhoto(this.currentUser.photoUrl);\n         }\n      })\n    );\n  }\n\n    register(user: User) {\n      return this.http.post(this.baseUrl + 'register', user);\n    }\n\n    loggedIn() {\n      const token = localStorage.getItem('token');\n      return !this.jwtHelper.isTokenExpired(token);\n    }\n}\n","import { Blog } from './../_models/blog';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlogService {\n  postUrl = 'http://localhost:5000/api/';\n  blogs: Blog[];\n\nconstructor(private http: HttpClient) { }\n\n  getAll(): Observable<Blog[]> {\n    return this.http.get<Blog[]>(this.postUrl + 'blogs');\n  }\n\n  getOne(id): Observable<Blog> {\n    return this.http.get<Blog>(this.postUrl + 'blogs/' + id);\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse, HTTP_INTERCEPTORS} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\n\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(req).pipe(\r\n            catchError(error => {\r\n               if (error instanceof HttpErrorResponse) {\r\n                   if (error.status === 401) {\r\n                       return throwError(error.statusText);\r\n                   }\r\n                   const applicationError = error.headers.get('Application-Error');\r\n                   if (applicationError) {\r\n                       console.error(applicationError);\r\n                       return throwError(applicationError);\r\n                   }\r\n                   const serverError = error.error;\r\n                   let modalStateErrors = '';\r\n                   if (serverError && typeof serverError === 'object') {\r\n                       for (const key in serverError) {\r\n                           if (serverError[key]) {\r\n                               modalStateErrors += serverError[key] + '\\n';\r\n                           }\r\n                       }\r\n                   }\r\n                   return throwError(modalStateErrors || serverError || 'Server Error');\r\n               }\r\n            })\r\n        );\r\n    }\r\n}\r\n\r\nexport const ErrorInterceptorProvider  = {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: ErrorInterceptor,\r\n    multi: true\r\n};\r\n\r\n","import { Portfolio } from './../_models/portfolio';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PortfolioService {\n  portfolioUrl = 'http://localhost:5000/api/';\n  portfolios: Portfolio[];\n\nconstructor(private http: HttpClient) { }\n\n  getPortfolios(): Observable<Portfolio[]> {\n    return this.http.get<Portfolio[]>(this.portfolioUrl + 'portfolios');\n  }\n\n  getPort(id): Observable<Portfolio> {\n    return this.http.get<Portfolio>(this.portfolioUrl + 'portfolios/' + id);\n  }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\nimport { Observable } from 'rxjs';\nimport { PaginatedResult } from '../_models/pagination';\nimport { map } from 'rxjs/operators';\nimport { Message } from '../_models/Message';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Authorization': 'Bearer ' + localStorage.getItem('token')\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  baseUrl = environment.apiUrl;\n\nconstructor(private http: HttpClient) { }\n\n  getUsers(page?, itemsPerPage?, userParams?, likesParam?): Observable<PaginatedResult<User[]>> {\n    const paginatedResult: PaginatedResult<User[]> = new PaginatedResult<User[]>();\n\n    let params = new HttpParams();\n\n    if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n     if (userParams != null) {\n      params = params.append('minAge', userParams.minAge);\n      params = params.append('maxAge', userParams.maxAge);\n      params = params.append('gender', userParams.gender);\n      params = params.append('orderBy', userParams.orderBy);\n    }\n    if (likesParam === 'Likers') {\n      params = params.append('Likers', 'true');\n    }\n     if (likesParam === 'Likees') {\n      params = params.append('Likees', 'true');\n    }\n\n\n    return this.http.get<User[]>(this.baseUrl + 'users', { observe: 'response', params})\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') != null) {\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n          return paginatedResult;\n        })\n      );\n  }\n\n  getUser(id): Observable<User> {\n    return this.http.get<User>(this.baseUrl + 'users/' + id);\n  }\n\n  updateUser(id: number, user: User) {\n    return this.http.put(this.baseUrl + 'users/' + id, user);\n  }\n\n  setMainPhoto(userId: number, id: number) {\n    return this.http.post(this.baseUrl + 'users/' + userId + '/photos/' + id + '/setMain', {});\n  }\n\n  deletePhoto(userId: number, id: number) {\n    return this.http.delete(this.baseUrl + 'users/' + userId + '/photos/' + id );\n  }\n\n  sendLike(id: number, recipientId: number) {\n    return this.http.post(this.baseUrl + 'users/' + id + '/like/' + recipientId, {});\n  }\n\n  getMessages(id: number, page?, itemsPerPage?, messageContainer?) {\n    const paginatedResult: PaginatedResult<Message[]> = new PaginatedResult<Message[]>();\n     let params = new HttpParams();\n     params = params.append('MessageContainer', messageContainer);\n     if (page != null && itemsPerPage != null) {\n      params = params.append('pageNumber', page);\n      params = params.append('pageSize', itemsPerPage);\n    }\n     return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/messages', {observe: 'response', params})\n      .pipe(\n        map(response => {\n          paginatedResult.result = response.body;\n          if (response.headers.get('Pagination') !== null) {\n            paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n          }\n           return paginatedResult;\n        })\n      );\n  }\n   getMessageThread(id: number, recipientId: number) {\n    return this.http.get<Message[]>(this.baseUrl + 'users/' + id + '/messages/thread/' + recipientId);\n  }\n   sendMessage(id: number, message: Message) {\n    return this.http.post(this.baseUrl + 'users/' + id + '/messages', message);\n  }\n   deleteMessage(id: number, userId: number) {\n    return this.http.post(this.baseUrl + 'users/' + userId + '/messages/' + id, {});\n  }\n   markAsRead(userId: number, messageId: number) {\n    this.http.post(this.baseUrl + 'users/' + userId + '/messages/' + messageId + '/read', {})\n      .subscribe();\n  }\n}\n\n","module.exports = \"\"","module.exports = \"<app-nav></app-nav>\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\\n\"","import { AuthService } from './_services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { User } from './_models/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  jwtHelper = new JwtHelperService();\n\n  constructor (private authService: AuthService) {}\n\n  ngOnInit() {\n    const token = localStorage.getItem('token');\n    const user: User = JSON.parse(localStorage.getItem('user'));\n    if (token) {\n      this.authService.decodedToken = this.jwtHelper.decodeToken(token);\n    }\n    if (user) {\n      this.authService.currentUser = user;\n      this.authService.changeMemberPhoto(user.photoUrl);\n    }\n  }\n\n}\n","import { PortfolioDetailResolver } from './_resolvers/portfolio-detail.resolver';\nimport { PortfolioListResolver } from './_resolvers/portfolio-list.resolver';\nimport { PortfolioService } from './_services/portfolio.service';\nimport { BlogListResolver } from './_resolvers/blog-list.resolver';\nimport { BlogDetailResolver } from './_resolvers/blog-detail.resolver';\nimport { BlogDetailComponent } from './myblog/blog-detail/blog-detail.component';\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\nimport { AuthGuard } from './_guards/auth.guard';\nimport { ErrorInterceptorProvider } from './_services/error.interceptor';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BsDropdownModule, TabsModule, BsDatepickerModule, PaginationModule, ButtonsModule } from 'ngx-bootstrap';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { NgxGalleryModule } from 'ngx-gallery';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport {TimeAgoPipe} from 'time-ago-pipe';\nimport { BlogService } from './_services/blog.service';\nimport { UserService } from './_services/user.service';\nimport { AuthService } from './_services/auth.service';\nimport { AlertifyService } from './_services/alertify.service';\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { HomeComponent } from './home/home.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { appRoutes } from './routes';\nimport { RegisterComponent } from './register/register.component';\nimport { ValueComponent } from './value/value.component';\nimport { ListsComponent } from './lists/lists.component';\nimport { MemberListComponent } from './members/member-list/member-list.component';\nimport { MemberCardComponent } from './members/member-card/member-card.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\nimport { MyportfolioListComponent } from './myportfolio/myportfolio-list/myportfolio-list.component';\nimport { MyportfolioDetailComponent } from './myportfolio/myportfolio-detail/myportfolio-detail.component';\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\nimport { ListsResolver } from './_resolvers/lists.resolver';\nimport { MessagesResolver } from './_resolvers/messages.resolver';\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\nimport { BlogListComponent } from './myblog/blog-list/blog-list.component';\nimport { BlogNewComponent } from './myblog/blog-new/blog-new.component';\n\nexport function tokenGetter() {\n   return localStorage.getItem('token');\n}\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      NavComponent,\n      HomeComponent,\n      FooterComponent,\n      ContactComponent,\n      RegisterComponent,\n      ValueComponent,\n      ListsComponent,\n      MemberListComponent,\n      MessagesComponent,\n      MemberCardComponent,\n      MemberDetailComponent,\n      MemberEditComponent,\n      MyportfolioListComponent,\n      MyportfolioDetailComponent,\n      PhotoEditorComponent,\n      TimeAgoPipe,\n      MemberMessagesComponent,\n      BlogListComponent,\n      BlogDetailComponent,\n      BlogNewComponent\n   ],\n   imports: [\n      BrowserModule,\n      FormsModule,\n      ReactiveFormsModule,\n      HttpClientModule,\n      BsDropdownModule.forRoot(),\n      TabsModule.forRoot(),\n      NgxGalleryModule,\n      FileUploadModule,\n      BsDatepickerModule.forRoot(),\n      PaginationModule.forRoot(),\n      ButtonsModule.forRoot(),\n      RouterModule.forRoot(appRoutes),\n      JwtModule.forRoot({\n         config: {\n           tokenGetter: tokenGetter,\n           whitelistedDomains: ['localhost:5000'],\n           blacklistedRoutes: ['localhost:5000/api/auth']\n         }\n       })\n     ],\n   providers: [\n      AuthService,\n      ErrorInterceptorProvider,\n      AlertifyService,\n      AuthGuard,\n      UserService,\n      BlogService,\n      PortfolioService,\n      MemberDetailResolver,\n      MemberListResolver,\n      MemberEditResolver,\n      PreventUnsavedChanges,\n      ListsResolver,\n      MessagesResolver,\n      BlogListResolver,\n      BlogDetailResolver,\n      PortfolioListResolver,\n      PortfolioDetailResolver\n   ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","module.exports = \"#contact-first{\\r\\n    background-image:url('/assets/images/contact-bg.jpg');\\r\\n    background-size:cover;\\r\\n    background-position: center center;\\r\\n    background-repeat:no-repeat;\\r\\n    text-align:center;\\r\\n    color:#ededed;\\r\\n  }\"","module.exports = \"<section id=\\\"contact\\\" style=\\\"background:#161616\\\">\\n\\t    <div class=\\\"container\\\">\\n\\t        <div class=\\\"row\\\">\\n\\t               <div class=\\\"col-lg-12 text-center\\\">\\n\\t\\t\\t\\t\\t\\t<h2 style=\\\"font:400 1.5em;color:white\\\">I WOULD LIKE TO HEAR FROM YOU</h2>\\n\\t\\t\\t\\t\\t\\t<hr class=\\\"star-primary\\\">\\n\\t               </div>\\n\\t        </div>\\n\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t<div class=\\\"col-lg-12\\\">\\t\\t\\n\\t\\t\\t\\t\\t<form action=\\\"\\\" method=\\\"post\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"name\\\">Name</label>\\n\\t\\t\\t\\t\\t\\t    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"name\\\" id=\\\"name\\\" value=\\\"name\\\"/>\\n\\t\\t\\t\\t\\t\\t\\t<p class=\\\"help-block text-danger\\\"></p>\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"email\\\">Email Address</label>\\n\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Email Address\\\" id=\\\"email\\\" value=\\\"email\\\">\\n\\t\\t\\t\\t\\t\\t\\t<p class=\\\"help-block text-danger\\\"></p>\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<label for=\\\"message\\\">Message</label>\\n\\t\\t\\t\\t\\t\\t\\t<textarea rows=\\\"5\\\" class=\\\"form-control\\\" placeholder=\\\"Message\\\" id=\\\"message\\\">\\n\\t\\t\\t\\t\\t\\t\\t</textarea>\\n\\t\\t\\t\\t\\t\\t\\t<p class=\\\"help-block text-danger\\\"></p>\\n\\t\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\t<br>\\n\\t\\t\\t\\t\\t\\t\\t<div id=\\\"success\\\"></div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group col-xs-12\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"Submit\\\" name=\\\"Submit\\\" class=\\\"btn btn-success btn-lg\\\" value=\\\"Send Message\\\"/>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t    </div>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</form>\\n\\t\\t\\t\\t</div><!--col-lg-12-->\\n\\t        </div><!--row-->\\n\\t    </div><!--container-->\\n</section>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"/*--------------\\r\\nContact Area \\r\\n---------------*/\\r\\n  section.contact{\\r\\n      text-align:center;\\r\\n  }\\r\\n  section.contact h2{\\r\\n      margin-top:0;\\r\\n      margin-bottom: 25px;\\r\\n  }\\r\\n  section.contact h2 i{\\r\\n      color:#dd4b39;\\r\\n  }\\r\\n  section.contact ul.list-social{\\r\\n      display: inline-flex;\\r\\n      margin-bottom:0;\\r\\n  }\\r\\n  section.contact ul.list-social li a{\\r\\n      display:block;\\r\\n      height:80px;\\r\\n      width:80px;\\r\\n      line-height:80px;\\r\\n      font-size:40px;\\r\\n      border-radius:100%;\\r\\n      color:white;\\r\\n  }\\r\\n  section.contact ul.list-social li.social-twitter a{\\r\\n      background-color: #1da1f2;\\r\\n  }\\r\\n  section.contact ul.list-social li.social-twitter a:hover{\\r\\n      background-color:#0d95e8;\\r\\n  }\\r\\n  section.contact ul.list-social li.social-facebook a{\\r\\n      background-color: #3b5998;\\r\\n  }\\r\\n  section.contact ul.list-social li.social-facebook a:hover{\\r\\n      background-color:#344e86;\\r\\n  }\\r\\n  section.contact ul.list-social li.social-google-plus a{\\r\\n      background-color:#dd4b39;\\r\\n  }\\r\\n  section.contact ul.list-social li.social-google-plus a:hover{\\r\\n      background-color:#d73925;\\r\\n  }\\r\\n  /*-------------\\r\\n  Footer Area \\r\\n  ---------------*/\\r\\n  footer{\\r\\n      background-color:#222222;\\r\\n      padding:25px 0;\\r\\n      text-align:center;\\r\\n      color:rgba(255,255,255,0.3);\\r\\n  }\\r\\n  footer p{\\r\\n      font-size:12px;\\r\\n      margin:0;\\r\\n  }\\r\\n  footer ul{\\r\\n      margin-bottom:0;\\r\\n  }\\r\\n  footer ul li a{\\r\\n      font-size:12px;\\r\\n      color:rgba(255,255,255,0.3);\\r\\n  }\\r\\n  footer ul li a:hover,\\r\\n  footer ul li a:focus,\\r\\n  footer ul li a:active,\\r\\n  footer ul li a.active{\\r\\n      text-decoration:none;\\r\\n  }\"","module.exports = \"<section id=\\\"contact\\\" class=\\\"contact bg-primary\\\">\\n\\t         <div class=\\\"container\\\">\\n\\t\\t\\t      <h2>We <i class=\\\"fa fa-heart\\\"></i>New Friends!</h2>\\n\\t\\t\\t      <ul class=\\\"list-inline list-social\\\">\\n\\t\\t\\t          <li class=\\\"social-twitter\\\">\\n\\t\\t\\t\\t\\t       <a href=\\\"#\\\"><i class=\\\"fa fa-twitter\\\"></i></a>\\n\\t\\t\\t\\t\\t  </li>\\n\\t\\t\\t          <li class=\\\"social-facebook\\\">\\n\\t\\t\\t              <a href=\\\"https://www.facebook.com/UxDesign-690772767726869/\\\"><i class=\\\"fa fa-facebook\\\"></i></a>\\n\\t\\t\\t          </li>\\n\\t\\t\\t          <li class=\\\"social-google-plus\\\">\\n\\t\\t\\t\\t\\t      <a href=\\\"#\\\"><i class=\\\"fa fa-google-plus\\\"></i>\\n\\t\\t\\t\\t\\t\\t  </a>\\n\\t\\t\\t\\t\\t  </li>\\n\\t\\t\\t      </ul>\\n\\t\\t\\t </div>\\n</section>\\n<footer>\\n\\t    <div class=\\\"container\\\">\\n\\t         <p>&copy;2016 UxDesign.\\n\\t\\t     <br>All Rights Reserved.</p>\\n\\t         <ul class=\\\"list-inline\\\">\\n\\t             <li>\\n\\t\\t\\t\\t\\t <a href=\\\"#\\\">Privacy</a>\\n\\t\\t\\t     </li>\\n\\t             <li>\\n\\t\\t\\t\\t\\t <a href=\\\"#\\\">Terms</a>\\n\\t\\t\\t     </li>\\t  \\n\\t             <li>\\n\\t\\t\\t\\t\\t <a href=\\\"#\\\">FAQ</a>\\n\\t\\t\\t\\t </li>\\n\\t          </ul>\\n\\t    </div>\\n</footer>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\r\\nheader.masthead {\\r\\n    padding-top: 10rem;\\r\\n    padding-bottom: calc(10rem - 56px);\\r\\n    background-position: center center;\\r\\n    background-size: cover;\\r\\n  }\\r\\n  \\r\\n  header.masthead hr {\\r\\n    margin-top: 30px;\\r\\n    margin-bottom: 30px;\\r\\n  }\\r\\n  \\r\\n  header.masthead h1 {\\r\\n    font-size: 2rem;\\r\\n  }\\r\\n  \\r\\n  header.masthead p {\\r\\n    font-weight: 300;\\r\\n  }\\r\\n  \\r\\n  @media (min-width: 768px) {\\r\\n    header.masthead p {\\r\\n      font-size: 1.15rem;\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  @media (min-width: 992px) {\\r\\n    header.masthead {\\r\\n      height: 100vh;\\r\\n      min-height: 650px;\\r\\n      padding-top: 0;\\r\\n      padding-bottom: 0;\\r\\n    }\\r\\n    header.masthead h1 {\\r\\n      font-size: 3rem;\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  @media (min-width: 1200px) {\\r\\n    header.masthead h1 {\\r\\n      font-size: 4rem;\\r\\n    }\\r\\n  }\"","module.exports = \"    <header class=\\\"masthead text-center text-white d-flex\\\">\\n      <div class=\\\"container my-auto\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-10 mx-auto\\\">\\n            <h1 class=\\\"text-uppercase\\\">\\n              <strong>PROFESSIONAL, CREATIVE WEBSITE DESIGN FOR BUSINESS</strong>\\n            </h1>\\n            <hr>\\n          </div>\\n          <div class=\\\"col-lg-8 mx-auto\\\">\\n            <p class=\\\"text-faded mb-5\\\">Start today with UxDesign We can help you build better websites using the Bootstrap CSS framework! Just give Us a Call, no strings attached!</p>\\n            <a class=\\\"btn btn-primary btn-xl js-scroll-trigger\\\" href=\\\"#about\\\">Find Out More</a>\\n          </div>\\n        </div>\\n      </div>\\n    </header>\\n    \\n    <!--Registration-Area-->\\n    <div class=\\\"container mt-5\\\">\\n      <div *ngIf=\\\"!registerMode\\\" style=\\\"text-align: center\\\">\\n        <h1>Find your match</h1>\\n        <p class=\\\"lead\\\">Come on in to view your matches... All you need to do is sign up!</p>\\n        <div class=\\\"text-center\\\">\\n          <button class=\\\"btn btn-primary btn-lg mr-2\\\" (click)=\\\"registerToggle()\\\">Register</button>\\n          <button class=\\\"btn btn-info btn-lg\\\">Learn more</button>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"registerMode\\\" class=\\\"container\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n          <div class=\\\"col-4\\\">\\n              <app-register (cancelRegister)=\\\"cancelRegisterMode($event)\\\"></app-register>\\n          </div>\\n        </div>\\n      </div>\\n    </div>  \\n   <section class=\\\"bg-primary\\\" id=\\\"about\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-8 mx-auto text-center\\\">\\n            <h2 class=\\\"section-heading text-white\\\">We've got what you need!</h2>\\n            <hr class=\\\"light my-4\\\">\\n            <p class=\\\"text-faded mb-4\\\">Start Today We make beautiful,online-stores that increase sales, improve operations and grow your business.experience, we know how to built like the back of our hand — we're the best in the business.</p>\\n            <a class=\\\"btn btn-light btn-xl js-scroll-trigger\\\" href=\\\"#services\\\">Get Started!</a>\\n          </div>\\n        </div>\\n      </div>\\n    </section>\\n    <section class=\\\"bg-dark text-white\\\">\\n        <div class=\\\"container text-center\\\">\\n            <div class=\\\"call-to-action\\\">\\n                <h2>Start Today Get Your Free Quote</h2>\\n                <a href=\\\"\\\" class=\\\"btn btn-default btn-xl sr-button\\\">Give Us a Call</a>\\n            </div>\\n        </div>\\n    </section>\\n\\n  <section id=\\\"contact\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-8 mx-auto text-center\\\">\\n            <h2 class=\\\"section-heading\\\">Let's Get In Touch!</h2>\\n            <hr class=\\\"my-4\\\">\\n            <p class=\\\"mb-5\\\">Ready to start your next project with us? That's great! Give us a call or send us an email and we will get back to you as soon as possible!</p>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-4 ml-auto text-center\\\">\\n            <i class=\\\"fa fa-phone fa-3x mb-3 sr-contact-1\\\"></i>\\n            <p>123-456-6789</p>\\n          </div>\\n          <div class=\\\"col-lg-4 mr-auto text-center\\\">\\n            <i class=\\\"fa fa-envelope fa-3x mb-3 sr-contact-2\\\"></i>\\n            <p>\\n              <a href=\\\"mailto:your-email@your-domain.com\\\">feedback@startbootstrap.com</a>\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n    </section>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerMode = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  registerToggle() {\n    this.registerMode = true;\n  }\n\n  cancelRegisterMode(registerMode: boolean) {\n    this.registerMode = registerMode;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"text-center mt-3\\\">\\n  <h2>{{likesParam === 'Likers' ? 'Members who like me' : 'Members who I\\\\ve Liked'}} : {{pagination.totalItems}}</h2>\\n</div>\\n\\n<div class=\\\"container mt-3\\\">\\n   <div class=\\\"row\\\">\\n    <div class=\\\"btn-group\\\">\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"likesParam\\\" btnRadio=\\\"Likers\\\" (click)=\\\"loadUsers()\\\">Members who like me</button>\\n      <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"likesParam\\\" btnRadio=\\\"Likees\\\" (click)=\\\"loadUsers()\\\">Members who I like</button>\\n    </div>\\n  </div>\\n   <br>\\n   <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let user of users\\\" class=\\\"col-sm-6 col-md-4 col-lg-4 col-xl-2\\\">\\n      <app-member-card [user]=\\\"user\\\"></app-member-card>\\n    </div>\\n  </div>\\n </div>\\n <div class=\\\"d-flex justify-content-center\\\">\\n  <pagination [boundaryLinks]=\\\"true\\\" [totalItems]=\\\"pagination.totalItems\\\" [itemsPerPage]=\\\"pagination.itemsPerPage\\\" [(ngModel)]=\\\"pagination.currentPage\\\"\\n    (pageChanged)=\\\"pageChanged($event)\\\" previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n   </pagination>\\n</div>\"","import { UserService } from './../_services/user.service';\nimport { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { User } from '../_models/user';\nimport { Pagination, PaginatedResult } from '../_models/pagination';\n\n@Component({\n  selector: 'app-lists',\n  templateUrl: './lists.component.html',\n  styleUrls: ['./lists.component.css']\n})\nexport class ListsComponent implements OnInit {\n  users: User[];\n  pagination: Pagination;\n  likesParam: string;\n\n  constructor(private authService: AuthService, private userService: UserService,\n    private route: ActivatedRoute, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n    this.likesParam = 'Likers';\n  }\n    loadUsers() {\n      this.userService\n        .getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, null, this.likesParam)\n        .subscribe((res: PaginatedResult<User[]>) => {\n          this.users = res.result;\n          this.pagination = res.pagination;\n      }, error => {\n        this.alertify.error(error);\n      });\n    }\n     pageChanged(event: any): void {\n      this.pagination.currentPage = event.page;\n      this.loadUsers();\n  }\n\n}\n","module.exports = \".card:hover img {\\r\\n    -webkit-transform: scale(1.2, 1.2);\\r\\n            transform: scale(1.2, 1.2);\\r\\n    transition-duration: 500ms;\\r\\n    transition-timing-function: ease-out;\\r\\n    opacity: 0.7;\\r\\n}\\r\\n .card img {\\r\\n    -webkit-transform: scale(1.0, 1.0);\\r\\n            transform: scale(1.0, 1.0);\\r\\n    transition-duration: 500ms;\\r\\n    transition-timing-function: ease-out;\\r\\n}\\r\\n .card-img-wrapper {\\r\\n    overflow: hidden;\\r\\n    position: relative;\\r\\n}\\r\\n .member-icons {\\r\\n    position: absolute;\\r\\n    bottom: -30%;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    margin-right: auto;\\r\\n    margin-left: auto;\\r\\n    opacity: 0;\\r\\n}\\r\\n .card-img-wrapper:hover .member-icons {\\r\\n    bottom: 0;\\r\\n    opacity: 1;\\r\\n}\\r\\n .animate {\\r\\n    transition: all 0.3s ease-in-out;\\r\\n} \"","module.exports = \"<div class=\\\"card mb-4\\\">\\n  <div class=\\\"card-img-wrapper\\\">\\n    <img class=\\\"card-img-top\\\" src=\\\"{{user.photoUrl || '../../../assets/user.png'}}\\\" alt=\\\"{{user.knownAs}}\\\">\\n        <ul class=\\\"list-inline member-icons animate text-center\\\">\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" \\n          [routerLink]=\\\"['/members/', user.id]\\\"><i class=\\\"fa fa-user\\\"></i></button></li>\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\" (click)=\\\"sendLike(user.id)\\\">\\n      <i class=\\\"fa fa-heart\\\"></i></button></li>\\n      <li class=\\\"list-inline-item\\\"><button class=\\\"btn btn-primary\\\"\\n        [routerLink]=\\\"['/members/', user.id]\\\" [queryParams]=\\\"{tab: 3}\\\"><i class=\\\"fa fa-envelope\\\"></i></button></li>\\n    </ul>\\n  </div>\\n  <div class=\\\"card-body p-1\\\">\\n    <h6 class=\\\"card-title text-center mb-1\\\"><i class=\\\"fa fa-user\\\"></i>\\n      {{user.knownAs}}, {{user.age}}\\n    </h6>\\n    <p class=\\\"card-text text-muted text-center\\\">{{user.city}}</p>\\n  </div>\\n</div>\"","import { AlertifyService } from './../../_services/alertify.service';\nimport { UserService } from './../../_services/user.service';\nimport { AuthService } from './../../_services/auth.service';\nimport { User } from '../../_models/user';\nimport { Component, OnInit, Input } from '@angular/core';\n\n\n@Component({\n  selector: 'app-member-card',\n  templateUrl: './member-card.component.html',\n  styleUrls: ['./member-card.component.css']\n})\nexport class MemberCardComponent implements OnInit {\n  @Input() user: User;\n\n  constructor(private authService: AuthService, private userService: UserService,\n      private alertify: AlertifyService) { }\n\n  ngOnInit() {\n  }\n\n  sendLike(id: number) {\n    this.userService.sendLike(this.authService.decodedToken.nameid, id).subscribe(data => {\n      this.alertify.success('You have liked: ' + this.user.knownAs);\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n  <div class=\\\"row\\\">\\n    <h1>{{user.knownAs}}'s Profile</h1>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <img class=\\\"card-img-top img-thumbnail\\\" src=\\\"{{user.photoUrl || '../../../assets/user.png'}}\\\" alt=\\\"{{user.knownAs}}\\\">\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <strong>Location:</strong>\\n            <p>{{user.city}}, {{user.age}}</p>\\n          </div>\\n          <div>\\n            <strong>Last Active:</strong>\\n            <p>{{user.lastActive | timeAgo}}</p>\\n          </div>\\n          <div>\\n            <strong>Member Since:</strong>\\n            <p>{{user.created | date: 'mediumDate'}}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n          <div class=\\\"btn-group d-flex\\\">\\n            <button class=\\\"btn btn-primary w-100\\\">Like</button>\\n            <button class=\\\"btn btn-success w-100\\\" (click)=\\\"selectTab(3)\\\">Message</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"tab-panel\\\">\\n        <tabset class=\\\"member-tabset\\\" #memberTabs>\\n          <tab heading=\\\"About {{user.knownAs}}\\\">\\n            <h4>Description</h4>\\n            <p>{{user.introduction}}</p>\\n            <h4>Looking For</h4>\\n            <p>{{user.lookingFor}}</p>\\n          </tab>\\n          <tab heading=\\\"Interests\\\">\\n            <h4>Interests</h4>\\n            <p>{{user.interests}}</p>\\n          </tab>\\n          <tab heading=\\\"Photos\\\">\\n            <ngx-gallery [options]=\\\"galleryOptions\\\" [images]=\\\"galleryImages\\\"></ngx-gallery>\\n          </tab>\\n          <tab heading=\\\"Messages\\\">\\n            <app-member-messages [recipientId]= \\\"user.id\\\"></app-member-messages>\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div> \"","import { AlertifyService } from './../../_services/alertify.service';\nimport { UserService } from './../../_services/user.service';\nimport { User } from './../../_models/user';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgxGalleryOptions, NgxGalleryImage, NgxGalleryAnimation } from 'ngx-gallery';\nimport { TabsetComponent } from 'ngx-bootstrap';\n\n@Component({\n  selector: 'app-member-detail',\n  templateUrl: './member-detail.component.html',\n  styleUrls: ['./member-detail.component.css']\n})\nexport class MemberDetailComponent implements OnInit {\n  @ViewChild('memberTabs') memberTabs: TabsetComponent;\n  user: User;\n  galleryOptions: NgxGalleryOptions[];\n  galleryImages: NgxGalleryImage[];\n\n  constructor(private userService: UserService, private alertify: AlertifyService,\n     private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.user = data['user'];\n    });\n    this.route.queryParams.subscribe(params => {\n      const selectedTab = params['tab'];\n      this.memberTabs.tabs[selectedTab > 0 ? selectedTab : 0].active = true;\n    });\n\n    this.galleryOptions = [\n       {\n          width: '500px',\n          height: '500px',\n          imagePercent: 100,\n          thumbnailsColumns: 4,\n          imageAnimation: NgxGalleryAnimation.Slide,\n          preview: false\n       }\n    ];\n    this.galleryImages = this.getImages();\n  }\n\n   getImages() {\n     const imageUrls = [];\n     for (let i = 0; i < this.user.photos.length; i++) {\n       imageUrls.push({\n          small: this.user.photos[i].url,\n          medium: this.user.photos[i].url,\n          big: this.user.photos[i].url,\n          description: this.user.photos[i].description\n       });\n     }\n     return imageUrls;\n   }\n   selectTab(tabId: number) {\n    this.memberTabs.tabs[tabId].active = true;\n  }\n\n}\n","module.exports = \".img-thumbnail {\\r\\n    margin: 25px;\\r\\n    width: 85%;\\r\\n    height: 85%;\\r\\n}\\r\\n .card-body {\\r\\n    padding: 0 25px;\\r\\n}\\r\\n .card-footer {\\r\\n    padding: 10px 15px;\\r\\n    background-color: #fff;\\r\\n    border-top: none;\\r\\n} \"","module.exports = \"<div class=\\\"container mt-4\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-4\\\">\\n          <h1>Your Profile</h1>\\n       </div>   \\n       <div class=\\\"col-sm-8\\\">\\n            <div *ngIf=\\\"editForm.dirty\\\" class=\\\"alert alert-info\\\">\\n                <strong>Information:</strong> You have made changes. Any unsaved changes will be lost!\\n            </div>\\n       </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-4\\\">\\n      <div class=\\\"card\\\">\\n        <img class=\\\"card-img-top img-thumbnail\\\" src=\\\"{{photoUrl}}\\\" alt=\\\"{{user.knownAs}}\\\">\\n        <div class=\\\"card-body\\\">\\n          <div>\\n            <strong>Location:</strong>\\n            <p>{{user.city}}, {{user.age}}</p>\\n          </div>\\n          <div>\\n            <strong>Last Active:</strong>\\n            <p>{{user.lastActive | timeAgo}}</p>\\n          </div>\\n          <div>\\n            <strong>Member Since:</strong>\\n            <p>{{user.created | date: 'mediumDate'}}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"card-footer\\\">\\n            <button [disabled]=\\\"!editForm.dirty\\\" form=\\\"editForm\\\" class=\\\"btn btn-success btn-block\\\">Save Changes</button>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"tab-panel\\\">\\n        <tabset class=\\\"member-tabset\\\">\\n          <tab heading=\\\"Edit Profile\\\">\\n           <form #editForm=\\\"ngForm\\\" id=\\\"editForm\\\" (ngSubmit)=\\\"updateUser()\\\">\\n                <h4>Description</h4>\\n                <textarea name=\\\"introduction\\\" rows=\\\"6\\\" class=\\\"form-control\\\" \\n                      [(ngModel)]=\\\"user.introduction\\\"></textarea>\\n                <h4>Looking For</h4>\\n                <textarea name=\\\"lookingFor\\\" rows=\\\"6\\\" class=\\\"form-control\\\" \\n                      [(ngModel)]=\\\"user.lookingFor\\\"></textarea>\\n                <h4>Interests</h4>      \\n                <textarea name=\\\"interests\\\" rows=\\\"6\\\" class=\\\"form-control\\\" \\n                      [(ngModel)]=\\\"user.interests\\\"></textarea>      \\n                 <h4>Location Details: </h4>\\n                 <div class=\\\"form-inline\\\">\\n                      <label for=\\\"city\\\">City</label>\\n                      <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"city\\\" [(ngModel)]=\\\"user.city\\\">\\n                      <label for=\\\"country\\\">Country</label>\\n                      <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"country\\\" [(ngModel)]=\\\"user.country\\\">\\n                 </div>\\n           </form>\\n          </tab>\\n          <tab heading=\\\"Edit Photos\\\">\\n              <app-photo-editor [photos]=\\\"user.photos\\\" \\n              (getMemberPhotoChange)=\\\"updateMainPhoto($event)\\\"></app-photo-editor>\\n          </tab>\\n        </tabset>\\n      </div>\\n    </div>\\n  </div>\\n</div> \"","import { AuthService } from './../../_services/auth.service';\nimport { UserService } from './../../_services/user.service';\nimport { AlertifyService } from './../../_services/alertify.service';\nimport { User } from './../../_models/user';\nimport { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-member-edit',\n  templateUrl: './member-edit.component.html',\n  styleUrls: ['./member-edit.component.css']\n})\nexport class MemberEditComponent implements OnInit {\n  @ViewChild('editForm') editForm: NgForm;\n  user: User;\n  photoUrl: string;\n  @HostListener('window:beforeunload', ['$event'])\n   unloadNotification($event: any) {\n     if (this.editForm.dirty) {\n       $event.returnValue = true;\n     }\n   }\n\n  constructor(private route: ActivatedRoute, private alertify: AlertifyService,\n    private userService: UserService, private authService: AuthService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n        this.user = data['user'];\n    });\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n  updateUser() {\n    this.userService.updateUser(this.authService.decodedToken.nameid, this.user).subscribe( next => {\n      this.alertify.success('Profile updated');\n      this.editForm.reset(this.user);\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n  updateMainPhoto(photoUrl) {\n     this.user.photoUrl = photoUrl;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"text-center mt-3\\\">\\n    <h2>Your matches - {{pagination.totalItems}} found</h2>\\n</div>\\n\\n<div class=\\\"container mt-5\\\">\\n  <form class=\\\"form-inline\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"loadUsers()\\\" novalidate>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"minAge\\\">Age From</label>\\n          <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 70px\\\" id=\\\"minAge\\\"\\n            [(ngModel)]=\\\"userParams.minAge\\\" name=\\\"minAge\\\">\\n        </div>\\n         <div class=\\\"form-group px-2\\\">\\n          <label for=\\\"maxAge\\\">Age To</label>\\n          <input type=\\\"number\\\" class=\\\"form-control ml-1\\\" style=\\\"width: 70px\\\" id=\\\"maxAge\\\"\\n             [(ngModel)]=\\\"userParams.maxAge\\\" name=\\\"maxAge\\\">\\n        </div>\\n         <div class=\\\"form-group px-2\\\">\\n            <label for=\\\"gender\\\">Show: </label>\\n              <select class=\\\"form-control ml-1\\\" style=\\\"width: 130px\\\" id=\\\"gender\\\"\\n                [(ngModel)]=\\\"userParams.gender\\\" name=\\\"gender\\\">\\n                <option *ngFor=\\\"let gender of genderList\\\" [value]=\\\"gender.value\\\">\\n                  {{gender.display}}\\n                </option>\\n              </select>\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" style=\\\"margin-left:10px\\\">Apply Filters</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"resetFilters()\\\" style=\\\"margin-left:10px\\\">\\n              Reset Filter\\n          </button>\\n        <div class=\\\"col\\\">\\n          <div class=\\\"btn-group float-right\\\">\\n            <button type=\\\"button\\\" name=\\\"orderBy\\\" class=\\\"btn btn-primary\\\"\\n              [(ngModel)]=\\\"userParams.orderBy\\\" (click)=\\\"loadUsers()\\\" btnRadio=\\\"lastActive\\\">Last Active</button>\\n            <button type=\\\"button\\\" name=\\\"orderBy\\\" class=\\\"btn btn-primary\\\"\\n              [(ngModel)]=\\\"userParams.orderBy\\\" (click)=\\\"loadUsers()\\\" btnRadio=\\\"created\\\">Newest Members</button>\\n          </div>\\n        </div>\\n       </form>\\n      <br>\\n  <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let user of users\\\" class=\\\"col-lg-2 col-md-3 col-sm-6\\\">\\n         <app-member-card [user]=\\\"user\\\"></app-member-card>\\n    </div>\\n  </div>\\n</div> \\n\\n<div class=\\\"d-flex justify-content-center\\\">\\n    <pagination\\n      [boundaryLinks]=\\\"true\\\"\\n      [totalItems]=\\\"pagination.totalItems\\\"\\n      [(ngModel)]=\\\"pagination.currentPage\\\"\\n      [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n      (pageChanged)=\\\"pageChanged($event)\\\"\\n    previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n   </pagination>\\n</div>\"","import { Pagination, PaginatedResult } from './../../_models/pagination';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from '../../_models/user';\nimport { AlertifyService } from '../../_services/alertify.service';\nimport { UserService } from '../../_services/user.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n  users: User[];\n  user: User = JSON.parse(localStorage.getItem('user'));\n  userParams: any = {};\n  genderList = [{value: 'male', display: 'Males'}, {value: 'female', display: 'Females'}];\n  pagination: Pagination;\n\n  constructor(private userService: UserService, private alertify: AlertifyService,\n    private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.users = data['users'].result;\n      this.pagination = data['users'].pagination;\n    });\n\n    this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\n    this.userParams.minAge = 18;\n    this.userParams.maxAge = 99;\n    this.userParams.orderBy = 'lastActive';\n\n  }\n    pageChanged(event: any): void {\n      this.pagination.currentPage = event.page;\n      this.loadUsers();\n    }\n\n    resetFilters() {\n      this.userParams.gender = this.user.gender === 'female' ? 'male' : 'female';\n      this.userParams.minAge = 18;\n      this.userParams.maxAge = 99;\n      this.loadUsers();\n    }\n\n   loadUsers() {\n     this.userService\n     .getUsers(this.pagination.currentPage, this.pagination.itemsPerPage, this.userParams)\n     .subscribe(\n       (res: PaginatedResult<User[]>) => {\n       this.users = res.result;\n       this.pagination = res.pagination;\n     },\n     error => {\n       this.alertify.error(error);\n     });\n   }\n\n}\n","module.exports = \".card {\\r\\n    border: none;\\r\\n  }\\r\\n   .chat {\\r\\n    list-style: none;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n  }\\r\\n   .chat li {\\r\\n    margin-bottom: 10px;\\r\\n    padding-bottom: 10px;\\r\\n    border-bottom: 1px dotted #B3A9A9;\\r\\n  }\\r\\n   .rounded-circle {\\r\\n    height: 50px;\\r\\n    width: 50px;\\r\\n  }\\r\\n   .card-body {\\r\\n    overflow-y: scroll;\\r\\n    height: 400px;\\r\\n  }\"","module.exports = \"<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <div *ngIf=\\\"messages?.length === 0\\\">\\n      No messages yet... say hi by using the message box below\\n    </div>\\n     <ul class=\\\"chat\\\">\\n      <li *ngFor=\\\"let message of messages\\\">\\n        <!-- to them -->\\n        <div *ngIf=\\\"message.senderId == recipientId\\\">\\n          <span class=\\\"chat-img float-left\\\">\\n            <img src=\\\"{{message.senderPhotoUrl}}\\\" alt=\\\"{{message.senderKnownAs}}\\\" class=\\\"rounded-circle\\\">\\n          </span>\\n          <div class=\\\"chat-body\\\">\\n            <div class=\\\"header\\\">\\n              <strong class=\\\"primary-font\\\">{{message.senderKnownAs}}</strong>\\n              <small class=\\\"text-muted float-right\\\">\\n                <span class=\\\"fa fa-clock-o\\\">{{message.messageSent | timeAgo}}</span>\\n              </small>\\n            </div>\\n            <p>{{message.content}}</p>\\n          </div>\\n        </div>\\n         <!-- to me -->\\n        <div *ngIf=\\\"message.senderId != recipientId\\\">\\n            <span class=\\\"chat-img float-right\\\">\\n              <img src=\\\"{{message.senderPhotoUrl}}\\\" alt=\\\"{{message.senderKnownAs}}\\\" class=\\\"rounded-circle\\\">\\n            </span>\\n            <div class=\\\"chat-body\\\">\\n              <div class=\\\"header\\\">\\n                  <small class=\\\"text-muted\\\">\\n                      <span class=\\\"fa fa-clock-o\\\">{{message.messageSent | timeAgo}}</span>\\n                      <span *ngIf=\\\"!message.isRead\\\" class=\\\"text-danger\\\">(unread)</span>\\n                      <span *ngIf=\\\"message.isRead\\\" class=\\\"text-success\\\">(Read {{message.dateRead | timeAgo}})</span>\\n                    </small>\\n                <strong class=\\\"primary-font float-right\\\">{{message.senderKnownAs}}</strong>\\n               </div>\\n              <p>{{message.content}}</p>\\n            </div>\\n          </div>\\n      </li>\\n    </ul>\\n   </div>\\n   <div class=\\\"card-footer\\\">\\n    <form #messageForm=\\\"ngForm\\\" (ngSubmit)=\\\"messageForm.valid && sendMessage()\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\"\\n          [(ngModel)]=\\\"newMessage.content\\\"\\n          name=\\\"content\\\"\\n          required\\n          class=\\\"form-control input-sm\\\"\\n          placeholder=\\\"send a private message\\\">\\n        <div class=\\\"input-group-append\\\">\\n          <button [disabled]=\\\"!messageForm.valid\\\" class=\\\"btn btn-primary\\\">Send</button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n </div>\"","import { AlertifyService } from './../../_services/alertify.service';\nimport { AuthService } from './../../_services/auth.service';\nimport { UserService } from './../../_services/user.service';\nimport { Message } from './../../_models/message';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-member-messages',\n  templateUrl: './member-messages.component.html',\n  styleUrls: ['./member-messages.component.css']\n})\nexport class MemberMessagesComponent implements OnInit {\n  @Input() recipientId: number;\n  messages: Message[];\n  newMessage: any = {};\n\n  constructor(private userService: UserService, private authService: AuthService,\n    private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.loadMessages();\n  }\n  loadMessages() {\n    const currentUserId = +this.authService.decodedToken.nameid;\n    this.userService.getMessageThread(this.authService.decodedToken.nameid, this.recipientId)\n      .pipe(\n        tap(messages => {\n          for (let i = 0; i < messages.length; i++) {\n            if (messages[i].isRead === false && messages[i].recipientId === currentUserId) {\n              this.userService.markAsRead(currentUserId, messages[i].id);\n            }\n          }\n        })\n      )\n      .subscribe(messages => {\n        this.messages = messages;\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n   sendMessage() {\n    this.newMessage.recipientId = this.recipientId;\n    this.userService.sendMessage(this.authService.decodedToken.nameid, this.newMessage)\n      .subscribe((message: Message) => {\n        this.messages.unshift(message);\n        this.newMessage.content = '';\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n\n}\n","module.exports = \"img.img-thumbnail {\\r\\n    height: 100px;\\r\\n    min-width: 100px !important;\\r\\n    margin-bottom: 2px;\\r\\n}\\r\\n .nv-file-over {\\r\\n    border: dotted 3px red;\\r\\n}\\r\\n input[type=file] {\\r\\n    color: transparent;\\r\\n} \"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-2\\\" *ngFor=\\\"let photo of photos\\\">\\n    <img src=\\\"{{photo.url}}\\\" class=\\\"img-thumbnail p-1\\\" alt=\\\"\\\">\\n    <div class=\\\"text-center\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm mr-1\\\" \\n        [ngClass]=\\\"photo.isMain ? 'btn-success active' : 'btn-secondary'\\\"\\n        (click)=\\\"setMainPhoto(photo)\\\" \\n        [disabled]=\\\"photo.isMain\\\">Main</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger\\\" \\n        [disabled]=\\\"photo.isMain\\\"\\n        (click)=\\\"deletePhoto(photo.id)\\\"><i class=\\\"fa fa-trash-o\\\"></i></button>\\n    </div>\\n  </div>\\n</div>\\n <div class=\\\"row mt-3\\\">\\n \\n    <div class=\\\"col-md-3\\\">\\n         <h3>Add Photos</h3>\\n         <div ng2FileDrop\\n             [ngClass]=\\\"{'nv-file-over': hasBaseDropZoneOver}\\\"\\n             (fileOver)=\\\"fileOverBase($event)\\\"\\n             [uploader]=\\\"uploader\\\"\\n             class=\\\"card bg-faded p-3 text-center mb-3 my-drop-zone\\\">\\n             <i class=\\\"fa fa-upload fa-3x\\\"></i>\\n            Drop Photos Here\\n        </div>\\n         Multiple\\n        <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" multiple  /><br/>\\n         Single\\n        <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n    </div>\\n     <div class=\\\"col-md-9\\\" style=\\\"margin-bottom: 40px\\\" *ngIf=\\\"uploader?.queue?.length\\\">\\n         <h3>Upload queue</h3>\\n        <p>Queue length: {{ uploader?.queue?.length }}</p>\\n         <table class=\\\"table\\\">\\n            <thead>\\n            <tr>\\n                <th width=\\\"50%\\\">Name</th>\\n                <th>Size</th>\\n            </tr>\\n            </thead>\\n            <tbody>\\n            <tr *ngFor=\\\"let item of uploader.queue\\\">\\n                <td><strong>{{ item?.file?.name }}</strong></td>\\n                <td *ngIf=\\\"uploader.options.isHTML5\\\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\n            </tr>\\n            </tbody>\\n        </table>\\n         <div>\\n            <div>\\n                Queue progress:\\n                <div class=\\\"progress mb-4\\\">\\n                    <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': uploader.progress + '%' }\\\"></div>\\n                </div>\\n            </div>\\n            <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\"\\n                    (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n                <span class=\\\"fa fa-upload\\\"></span> Upload\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-warning btn-s\\\"\\n                    (click)=\\\"uploader.cancelAll()\\\" [disabled]=\\\"!uploader.isUploading\\\">\\n                <span class=\\\"fa fa-ban\\\"></span> Cancel\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-danger btn-s\\\"\\n                    (click)=\\\"uploader.clearQueue()\\\" [disabled]=\\\"!uploader.queue.length\\\">\\n                <span class=\\\"fa fa-trash\\\"></span> Remove\\n            </button>\\n        </div>\\n     </div>\\n </div> \"","import { AlertifyService } from './../../_services/alertify.service';\nimport { UserService } from './../../_services/user.service';\nimport { AuthService } from './../../_services/auth.service';\nimport { environment } from './../../../environments/environment';\nimport { Photo } from './../../_models/photo';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\n\n@Component({\n  selector: 'app-photo-editor',\n  templateUrl: './photo-editor.component.html',\n  styleUrls: ['./photo-editor.component.css']\n})\nexport class PhotoEditorComponent implements OnInit {\n  @Input() photos: Photo[];\n  @Output() getMemberPhotoChange = new EventEmitter<string>();\n  uploader: FileUploader;\n  hasBaseDropZoneOver = false;\n  baseUrl = environment.apiUrl;\n  currentMain: Photo;\n\n  constructor(private authService: AuthService, private userService: UserService,\n    private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.initializeUploader();\n  }\n\n  fileOverBase(e: any): void {\n     this.hasBaseDropZoneOver = e;\n  }\n\n  initializeUploader() {\n    this.uploader = new FileUploader({\n       url: this.baseUrl + 'users/' + this.authService.decodedToken.nameid + '/photos',\n       authToken: 'Bearer ' + localStorage.getItem('token'),\n       isHTML5: true,\n       allowedFileType: ['image'],\n       removeAfterUpload: true,\n       autoUpload: false,\n       maxFileSize: 10 * 1024 * 1024\n    });\n\n    this.uploader.onAfterAddingFile = (file) => {file.withCredentials = false; };\n\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\n      if (response) {\n        const res: Photo = JSON.parse(response);\n        const photo = {\n          id: res.id,\n          url: res.url,\n          dateAdded: res.dateAdded,\n          description: res.description,\n          isMain: res.isMain\n        };\n        this.photos.push(photo);\n        if (photo.isMain) {\n          this.authService.changeMemberPhoto(photo.url);\n          this.authService.currentUser.photoUrl = photo.url;\n          localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n        }\n      }\n    };\n  }\n\n   setMainPhoto(photo: Photo) {\n      this.userService.setMainPhoto(this.authService.decodedToken.nameid, photo.id).subscribe(() => {\n        this.currentMain = this.photos.filter(p => p.isMain === true)[0];\n        this.currentMain.isMain = false;\n        photo.isMain = true;\n        this.authService.changeMemberPhoto(photo.url);\n        this.authService.currentUser.photoUrl = photo.url;\n        localStorage.setItem('user', JSON.stringify(this.authService.currentUser));\n      }, error => {\n        this.alertify.error(error);\n      });\n  }\n\n  deletePhoto(id: number) {\n    this.alertify.confirm('Are you sure you want to delete this photo?', () => {\n       this.userService.deletePhoto(this.authService.decodedToken.nameid, id).subscribe(() => {\n         this.photos.splice(this.photos.findIndex(p => p.id === id), 1);\n         this.alertify.success('Photo has been deleted');\n       }, error => {\n          this.alertify.error('Failed to delete the photo');\n       });\n    });\n  }\n\n}\n","module.exports = \"table {\\r\\n  margin-top: 15px;\\r\\n}\\r\\n .img-circle {\\r\\n  max-height: 50px;\\r\\n}\\r\\n td {\\r\\n  vertical-align: middle;\\r\\n}\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"btn-group\\\">\\n        <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Unread\\\" (click)=\\\"loadMessages()\\\">\\n          <i class=\\\"fa fa-envelope\\\"></i> Unread\\n        </button>\\n        <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Inbox\\\" (click)=\\\"loadMessages()\\\">\\n          <i class=\\\"fa fa-envelope-open\\\"></i> Inbox\\n        </button>\\n        <button class=\\\"btn btn-primary\\\" [(ngModel)]=\\\"messageContainer\\\" btnRadio=\\\"Outbox\\\" (click)=\\\"loadMessages()\\\">\\n          <i class=\\\"fa fa-paper-plane\\\"></i> Outbox\\n        </button>\\n      </div>\\n    </div>\\n  \\n    <div class=\\\"row\\\" *ngIf=\\\"messages.length == 0\\\">\\n      <h3>No messages</h3>\\n    </div>\\n  \\n    <div class=\\\"row\\\" *ngIf=\\\"messages.length > 0\\\">\\n      <table class=\\\"table table-hover\\\" style=\\\"cursor: pointer\\\">\\n        <tr>\\n          <th style=\\\"width: 40%\\\">Message</th>\\n          <th style=\\\"width: 20%\\\">From / To</th>\\n          <th style=\\\"width: 20%\\\">Sent / Received</th>\\n          <th style=\\\"width: 20%\\\"></th>\\n        </tr>\\n        <tr *ngFor=\\\"let message of messages\\\" [routerLink]=\\\"['/members', \\n          messageContainer == 'Outbox' ? message.recipientId : message.senderId]\\\"\\n          [queryParams]=\\\"{tab: 3}\\\">\\n          <td>{{message.content}}</td>\\n          <td>\\n            <div *ngIf=\\\"messageContainer != 'Outbox'\\\">\\n                  <img src={{message?.senderPhotoUrl}} class=\\\"img-circle rounded-circle\\\">\\n                  <strong>{{message.senderKnownAs}}</strong>\\n            </div>\\n            <div *ngIf=\\\"messageContainer == 'Outbox'\\\">\\n                  <img src={{message?.recipientPhotoUrl}} class=\\\"img-circle rounded-circle\\\">\\n                  <strong>{{message.recipientKnownAs}}</strong>\\n            </div>\\n          </td>\\n          <td>{{message.messageSent | timeAgo}}</td>\\n          <td>\\n            <button class=\\\"btn btn-danger\\\"(click)=\\\"$event.stopPropagation()\\\" (click)=\\\"deleteMessage(message.id)\\\">Delete</button>\\n          </td>\\n        </tr>\\n      </table>\\n  \\n    </div>\\n  \\n  </div>\\n\\n  <div class=\\\"d-flex justify-content-center\\\">\\n      <pagination [boundaryLinks]=\\\"true\\\" \\n                  [totalItems]=\\\"pagination.totalItems\\\"\\n                  [itemsPerPage]=\\\"pagination.itemsPerPage\\\"\\n                  [(ngModel)]=\\\"pagination.currentPage\\\"\\n                  (pageChanged)=\\\"pageChanged($event)\\\"\\n                previousText=\\\"&lsaquo;\\\" nextText=\\\"&rsaquo;\\\" firstText=\\\"&laquo;\\\" lastText=\\\"&raquo;\\\">\\n    </pagination>\\n    </div>\"","import { PaginatedResult } from './../_models/pagination';\nimport { AuthService } from './../_services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Message } from '../_models/Message';\nimport { Pagination } from '../_models/pagination';\nimport { UserService } from '../_services/user.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { AlertifyService } from '../_services/alertify.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n  messages: Message[];\n  pagination: Pagination;\n  messageContainer = 'Unread';\n\n  constructor(private userService: UserService, private authService: AuthService,\n    private route: ActivatedRoute, private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.messages = data['messages'].result;\n      this.pagination = data['messages'].pagination;\n    });\n  }\n\n  loadMessages() {\n    this.userService.getMessages(this.authService.decodedToken.nameid, this.pagination.currentPage,\n      this.pagination.itemsPerPage, this.messageContainer)\n      .subscribe((res: PaginatedResult<Message[]>) => {\n          this.messages = res.result;\n          this.pagination = res.pagination;\n      }, error => {\n        this.alertify.error(error);\n      });\n  }\n\n  deleteMessage(id: number) {\n    this.alertify.confirm('Are you sure you want to delete this message', () => {\n      this.userService.deleteMessage(id, this.authService.decodedToken.nameid).subscribe(() => {\n        this.messages.splice(this.messages.findIndex(m => m.id === id), 1);\n        this.alertify.success('Message has been deleted');\n      }, error => {\n        this.alertify.error('Failed to delete the message');\n      });\n    });\n  }\n\n  pageChanged(event: any): void {\n     this.pagination.currentPage = event.page;\n     this.loadMessages();\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n        <h2 class=\\\"card-title\\\">{{blog.title}}</h2>\\n        <img class=\\\"img-responsive\\\" src=\\\"assets/images/{{blog.image}}.png\\\" alt=\\\"Card image cap\\\">\\n        <div class=\\\"card-body\\\">\\n            <p class=\\\"card-text\\\">{{blog.post}}</p>\\n            <a [routerLink]=\\\"['/blog']\\\" class=\\\"btn btn-primary\\\">&larr;Go Back</a>\\n        </div>\\n        <div class=\\\"card-footer text-muted\\\">\\n                Posted on {{blog.created | date: 'mediumDate'}} by\\n                <a href=\\\"#\\\">{{blog.author}}</a>\\n        </div>\\n</div>\\n\\n\"","import { Blog } from './../../_models/blog';\nimport { ActivatedRoute } from '@angular/router';\nimport { BlogService } from './../../_services/blog.service';\nimport { AlertifyService } from './../../_services/alertify.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-blog-detail',\n  templateUrl: './blog-detail.component.html',\n  styleUrls: ['./blog-detail.component.css']\n})\nexport class BlogDetailComponent implements OnInit {\n  blog: Blog;\n\n  constructor(private alertify: AlertifyService, private blogService: BlogService,\n    private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.blog = data['blog'];\n    });\n  }\n\n  // loadBlog() {\n  //   this.blogService.getOne(+this.route.snapshot.params['id']).subscribe((blog: Blog) => {\n  //     this.blog = blog;\n  //   }, error => {\n  //     this.alertify.error(error);\n  //   });\n  // }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container mt-5\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-8\\\">\\n            <h1 class=\\\"card-my-4\\\">Best Web Development & Programming \\n              <br><small>Blogs for 2017</small>\\n            </h1>\\n            <br>\\n            <div class=\\\"card mb-4\\\" *ngFor=\\\"let blog of blogs\\\">\\n                  <h2 class=\\\"card-title\\\">{{blog.title}}</h2>\\n                  <img class=\\\"img-responsive\\\" src=\\\"assets/images/{{blog.image}}.png\\\" alt=\\\"Card image cap\\\">\\n                  <div class=\\\"card-body\\\">\\n                        <p class=\\\"card-text\\\">{{blog.post}}</p>\\n                        <a [routerLink]=\\\"['/blog/', blog.id]\\\" class=\\\"btn btn-primary\\\">Read More &rarr;</a>\\n                        <a [routerLink]=\\\"['/blog-new/']\\\" class=\\\"btn btn-primary\\\">Read More &rarr;</a>\\n                  </div>\\n                  <div class=\\\"card-footer text-muted\\\">\\n                      Posted on {{blog.created | date: 'mediumDate' }} by\\n                      <a href=\\\"#\\\">{{blog.author}}</a>\\n                  </div>\\n            </div>    \\n            <ul class=\\\"pagination justify-content-center mb-4\\\">\\n                <li class=\\\"page-item\\\">\\n                  <a class=\\\"page-link\\\" href=\\\"#\\\">&larr; Older</a>\\n                </li>\\n                <li class=\\\"page-item disabled\\\">\\n                  <a class=\\\"page-link\\\" href=\\\"#\\\">Newer &rarr;</a>\\n                </li>\\n            </ul>\\n\\n        </div>\\n\\n        <!-- Sidebar Widgets Column -->\\n        <div class=\\\"col-md-4\\\">\\n             <!-- Search Widget -->\\n                  <div class=\\\"card my-4\\\">\\n                      <h5 class=\\\"card-header\\\">Search</h5>\\n                      <div class=\\\"card-body\\\">\\n                           <div class=\\\"input-group\\\">\\n                           <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search for...\\\">\\n                            <span class=\\\"input-group-btn\\\">\\n                                  <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\">Go!</button>\\n                            </span>\\n                       </div>\\n                 </div>\\n          </div>\\n\\n          <!-- Categories Widget -->\\n          <div class=\\\"card my-4\\\">\\n            <h5 class=\\\"card-header\\\">Categories</h5>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-6\\\">\\n                  <ul class=\\\"list-unstyled mb-0\\\">\\n                    <li>\\n                      <a href=\\\"#\\\">Web Design</a>\\n                    </li>\\n                    <li>\\n                      <a href=\\\"#\\\">HTML</a>\\n                    </li>\\n                    <li>\\n                      <a href=\\\"#\\\">Freebies</a>\\n                    </li>\\n                  </ul>\\n                </div>\\n                <div class=\\\"col-lg-6\\\">\\n                  <ul class=\\\"list-unstyled mb-0\\\">\\n                    <li>\\n                      <a href=\\\"#\\\">JavaScript</a>\\n                    </li>\\n                    <li>\\n                      <a href=\\\"#\\\">CSS</a>\\n                    </li>\\n                    <li>\\n                      <a href=\\\"#\\\">Tutorials</a>\\n                    </li>\\n                  </ul>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"card my-4\\\">\\n              <h5 class=\\\"card-header\\\">Side Widget</h5>\\n              <div class=\\\"card-body\\\">\\n                      JavaScript is the most popular language above Java, Python, Node.js, Ruby, and more. \\n                      JavaScript is the language that browsers use. It's easy to get started with and to understand.\\n                      You can get going right away - unlike other languages, you don't have install a bunch of programs \\n                      before you can even begin.Sep 14, 2017\\n              </div>\\n          </div>\\n\\n        </div>\\n\\n      </div>\\n</div>\"","import { ActivatedRoute } from '@angular/router';\nimport { Blog } from './../../_models/blog';\nimport { AlertifyService } from './../../_services/alertify.service';\nimport { BlogService } from './../../_services/blog.service';\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-blog-list',\n  templateUrl: './blog-list.component.html',\n  styleUrls: ['./blog-list.component.css']\n})\nexport class BlogListComponent implements OnInit {\n  blogs: Blog[];\n\n  constructor(private http: HttpClient, private blogService: BlogService,\n    private alertify: AlertifyService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n       this.blogs = data['blogs'];\n    });\n  }\n\n  // allPosts() {\n  //   this.blogService.getAll().subscribe((blogs: Blog[]) => {\n  //     this.blogs = blogs;\n  //   }, error => {\n  //     this.alertify.error(error);\n  //   });\n  //  }\n\n}\n","module.exports = \"\"","module.exports = \"<a href=\\\"#\\\" id=\\\"new-button\\\">New</a>\\n<table>\\n<thead>\\n    <tr>\\n        <th>Date</th>\\n        <th>Distance in meters</th>\\n        <th>Time</th>\\n        <th>Average speed</th>\\n        <th>Commands</th>\\n    </tr>\\n</thead>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-blog-new',\n  templateUrl: './blog-new.component.html',\n  styleUrls: ['./blog-new.component.css']\n})\nexport class BlogNewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \" <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12 text-center\\\">\\n                    <h2 class=\\\"section-heading\\\">{{portfolio.title}}</h2>\\n                    <hr class=\\\"primary\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                 <div class=\\\"card\\\">\\n                  <img class=\\\"card-img-top img-thumbnail\\\" src=\\\"assets/images/{{portfolio.image}}.png\\\" alt=\\\"{{portfolio.image}}\\\">\\n                  </div>\\n            </div>\\n            <div class=\\\"content\\\">\\n\\t\\t\\t\\t<h3>{{portfolio.title}}</h3>\\n\\t\\t\\t\\t<p>{{portfolio.description}}</p>\\n\\t\\t\\t\\t<a [routerLink]=\\\"['/portfolio']\\\" class=\\\"btn btn-primary btn-outline\\\">Go Back</a>\\n\\t\\t\\t</div>\\t \\n</div>\"","import { Portfolio } from './../../_models/portfolio';\nimport { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-myportfolio-detail',\n  templateUrl: './myportfolio-detail.component.html',\n  styleUrls: ['./myportfolio-detail.component.css']\n})\nexport class MyportfolioDetailComponent implements OnInit {\n   portfolio: Portfolio;\n  constructor(private http: HttpClient, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n      this.portfolio = data['portfolio'];\n    });\n  }\n  // getPortfolio(id) {\n  //   this.http.get('http://localhost:5000/api/portfolios/' + this.route.params['id'])\n  //       .subscribe(response => {\n  //         this.portfolios = response;\n  //       }, error => {\n  //         console.log(error);\n  //       });\n  // }\n\n\n}\n","module.exports = \"\"","module.exports = \"<section id=\\\"main-gallery\\\">\\n\\t     <div class=\\\"container\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-12 text-center\\\">\\n                    <h2 class=\\\"section-heading\\\">MY LATEST WORKS</h2>\\n                    <hr class=\\\"primary\\\">\\n                </div>\\n            </div>\\n        </div>\\n\\t    <div class=\\\"container text-center\\\">\\n\\t\\t\\t    <div class=\\\"row\\\">\\n\\t\\t\\t\\t    \\n\\t\\t\\t\\t        <div class=\\\"col-md-4 outside-box\\\" *ngFor=\\\"let portfolio of portfolios\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"inside-box\\\">\\t\\t\\t\\t\\t  \\n\\t\\t\\t\\t\\t\\t\\t\\t\\t <img class=\\\"img-thumbnail\\\" src=\\\"assets/images/{{portfolio.image}}.png\\\" alt=\\\"ultimate-website\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t <div class=\\\"overlay\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t  <div class=\\\"text\\\">{{portfolio.mainTitle}}</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t </div>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"content\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <h3>{{portfolio.title}}</h3>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <p>{{portfolio.description}}</p>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t  <a [routerLink]=\\\"['/portfolio/', portfolio.id]\\\" class=\\\"btn btn-primary btn-outline\\\">More Info</a>\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\t \\n\\t\\t\\t\\t\\t\\t</div>\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t\\n            </div>\\n\\t\\t</div>      \\n</section>\\n\"","import { Portfolio } from './../../_models/portfolio';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-myportfolio-list',\n  templateUrl: './myportfolio-list.component.html',\n  styleUrls: ['./myportfolio-list.component.css']\n})\nexport class MyportfolioListComponent implements OnInit {\n  portfolios: Portfolio[];\n\n  constructor(private http: HttpClient, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.subscribe(data => {\n       this.portfolios = data['portfolios'];\n    });\n  }\n  // getPortfolio() {\n  //   this.http.get('http://localhost:5000/api/portfolios')\n  //       .subscribe(response => {\n  //         this.portfolios = response;\n  //       }, error => {\n  //         console.log(error);\n  //       });\n  // }\n\n}\n\n","module.exports = \".dropdown-toggle, .dropdown-item {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\nimg {\\r\\n    max-height: 50px;\\r\\n    border: 2px solid white;\\r\\n    display: inline;\\r\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-primary\\\">\\n    <div class=\\\"container\\\">\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\">UxDesign/Style</a>\\n    \\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n            <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                  <a class=\\\"nav-link\\\" [routerLink]=\\\"['/portfolio']\\\">Portfolio</a>\\n                </li>\\n                <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                  <a class=\\\"nav-link\\\" [routerLink]=\\\"['/blog']\\\">Blog-in</a>\\n                </li>\\n                <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                  <a class=\\\"nav-link\\\" [routerLink]=\\\"['/contact']\\\">Contact</a>\\n                </li>\\n        </ul>\\n        <ul *ngIf=\\\"loggedIn()\\\" class=\\\"navbar-nav mr-auto\\\">\\n                <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                  <a class=\\\"nav-link\\\" [routerLink]=\\\"['/members']\\\">Matches</a>\\n                </li>\\n                <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                  <a class=\\\"nav-link\\\" [routerLink]=\\\"['/lists']\\\">Lists</a>\\n                </li>\\n                <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                  <a class=\\\"nav-link\\\" [routerLink]=\\\"['/messages']\\\">Messages</a>\\n                </li>\\n                <li class=\\\"nav-item\\\" routerLinkActive=\\\"active\\\">\\n                <a class=\\\"nav-link\\\" [routerLink]=\\\"['/value']\\\">Values</a>\\n              </li>\\n        </ul>\\n        <div *ngIf=\\\"loggedIn()\\\" class=\\\"dropdown\\\" dropdown>\\n            <span class=\\\"mr-1\\\">\\n                  <img src=\\\"{{photoUrl || '../../assets/user.png'}}\\\" alt=\\\"\\\">\\n            </span>\\n            <a class=\\\"dropdown-toggle text-light\\\" dropdownToggle>\\n               Welcome {{authService.decodedToken?.unique_name | titlecase}}\\n            </a>\\n            <div class=\\\"dropdown-menu mt-3\\\" *dropdownMenu>\\n                 <a class=\\\"dropdown-item\\\" [routerLink]=\\\"['/member/edit']\\\">\\n                 <i class=\\\"fa fa-user\\\"></i>Edit Profile</a>\\n                 <div class=\\\"dropdown-divider\\\"></div>\\n                 <a class=\\\"dropdown-item\\\" (click)=\\\"logout()\\\">\\n                 <i class=\\\"fa fa-sign-out\\\"></i>Logout</a>\\n            </div>\\n        </div>\\n        <form *ngIf=\\\"!loggedIn()\\\" #loginForm=\\\"ngForm\\\" class=\\\"form-inline my-2 my-lg-0\\\" (ngSubmit)=\\\"login()\\\">\\n          <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" name=\\\"username\\\" \\n           placeholder=\\\"Username\\\" required [(ngModel)]=\\\"model.username\\\">\\n          <input class=\\\"form-control mr-sm-2\\\" type=\\\"password\\\" name=\\\"password\\\"\\n          placeholder=\\\"Password\\\" required [(ngModel)]=\\\"model.password\\\">\\n          <button [disabled]=\\\"!loginForm.valid\\\" class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">Login</button>\\n        </form>\\n    </div>  \\n    </nav>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  model: any = {};\n  photoUrl: string;\n\n  constructor(private authService: AuthService, private alertify: AlertifyService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.authService.currentPhotoUrl.subscribe(photoUrl => this.photoUrl = photoUrl);\n  }\n\n  login() {\n    this.authService.login(this.model).subscribe(next => {\n      this.alertify.success('Logged in Successfully');\n    }, error => {\n      this.alertify.error(error);\n    }, () => {\n      this.router.navigate(['/members']);\n    });\n  }\n\n  loggedIn() {\n     return this.authService.loggedIn();\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    this.authService.decodedToken = null;\n    this.authService.currentUser = null;\n    this.alertify.message('logged out');\n    this.router.navigate(['/home']);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\n  <h2 class=\\\"text-center text-primary\\\">Sign Up</h2>\\n  <hr>\\n\\n  <div class=\\\"form-group\\\">\\n      <label class=\\\"control-label\\\" style=\\\"margin-right:10px\\\">I am a: </label>\\n      <label class=\\\"radio-inline\\\">\\n        <input class=\\\"mr-3\\\" type=\\\"radio\\\" value=\\\"male\\\" formControlName=\\\"gender\\\">Male\\n      </label>\\n      <label class=\\\"radio-inline ml-3\\\">\\n        <input class=\\\"mr-3\\\" type=\\\"radio\\\" value=\\\"female\\\" formControlName=\\\"gender\\\">Female\\n      </label>\\n    </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"text\\\" \\n      [ngClass]=\\\"{'is-invalid': registerForm.get('username').errors \\n        && registerForm.get('username').touched}\\\"\\n      class=\\\"form-control\\\" \\n      formControlName=\\\"username\\\" \\n      placeholder=\\\"Username\\\">\\n    <div class=\\\"invalid-feedback\\\">Please choose a username</div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n      <input [ngClass]=\\\"{'is-invalid': registerForm.get('knownAs').errors && registerForm.get('knownAs').touched}\\\" class=\\\"form-control\\\"\\n        placeholder=\\\"Known as\\\" formControlName=\\\"knownAs\\\">\\n      <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('knownAs').touched && registerForm.get('knownAs').hasError('required')\\\">Known as is required</div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <input [ngClass]=\\\"{'is-invalid': registerForm.get('dateOfBirth').errors && registerForm.get('dateOfBirth').touched}\\\" class=\\\"form-control\\\"\\n          placeholder=\\\"Date of Birth\\\" formControlName=\\\"dateOfBirth\\\" type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"bsConfig\\\">\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('dateOfBirth').touched && registerForm.get('dateOfBirth').hasError('required')\\\">Date of Birth is required</div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n          <input [ngClass]=\\\"{'is-invalid': registerForm.get('city').errors && registerForm.get('city').touched}\\\" class=\\\"form-control\\\"\\n            placeholder=\\\"City\\\" formControlName=\\\"city\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('city').touched && registerForm.get('city').hasError('required')\\\">City is required</div>\\n        </div>\\n      \\n        <div class=\\\"form-group\\\">\\n          <input [ngClass]=\\\"{'is-invalid': registerForm.get('country').errors && registerForm.get('country').touched}\\\" class=\\\"form-control\\\"\\n            placeholder=\\\"Country\\\" formControlName=\\\"country\\\">\\n          <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('country').touched && registerForm.get('country').hasError('required')\\\">Country is required</div>\\n        </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <input type=\\\"password\\\" \\n      [ngClass]=\\\"{'is-invalid': registerForm.get('password').errors \\n        && registerForm.get('password').touched}\\\"\\n      class=\\\"form-control\\\" \\n      formControlName=\\\"password\\\" \\n      placeholder=\\\"Password\\\">\\n      <div class=\\\"invalid-feedback\\\" \\n        *ngIf=\\\"registerForm.get('password').hasError('required') \\n          && registerForm.get('password').touched\\\">\\n          Password is required\\n      </div>\\n      <div class=\\\"invalid-feedback\\\" \\n      *ngIf=\\\"registerForm.get('password').hasError('minlength') \\n        && registerForm.get('password').touched\\\">\\n        Password must be at least 4 characters\\n    </div>\\n    <div class=\\\"invalid-feedback\\\" \\n    *ngIf=\\\"registerForm.get('password').hasError('maxlength') \\n      && registerForm.get('password').touched\\\">\\n      Password cannot exceed 8 characters\\n  </div>\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n      <input \\n        [ngClass]=\\\"{'is-invalid': registerForm.get('confirmPassword').errors \\n          && registerForm.get('confirmPassword').touched\\n          || registerForm.get('confirmPassword').touched\\n          && registerForm.hasError('mismatch')}\\\"\\n        type=\\\"password\\\" \\n        class=\\\"form-control\\\" \\n        formControlName=\\\"confirmPassword\\\" \\n        placeholder=\\\"Confirm Password\\\">\\n        <div class=\\\"invalid-feedback\\\" \\n        *ngIf=\\\"registerForm.get('confirmPassword').hasError('required') \\n          && registerForm.get('confirmPassword').touched\\\">\\n          Confirm Password is required\\n      </div>\\n      <div class=\\\"invalid-feedback\\\" \\n      *ngIf=\\\"registerForm.hasError('mismatch') \\n        && registerForm.get('confirmPassword').touched\\\">\\n        Passwords must match\\n    </div>\\n    </div>\\n\\n  <div class=\\\"form-group text-center\\\">\\n    <button class=\\\"btn btn-success\\\" [disabled]=\\\"!registerForm.valid\\\" type=\\\"submit\\\">Register</button>\\n    <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n  </div>\\n  \\n</form>\"","import { AuthService } from './../_services/auth.service';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AlertifyService } from '../_services/alertify.service';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { BsDatepickerConfig } from 'ngx-bootstrap';\nimport { User } from '../_models/user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  @Output() cancelRegister = new EventEmitter();\n  user: User;\n  registerForm: FormGroup;\n  bsConfig: Partial<BsDatepickerConfig>;\n\n  constructor(private authService: AuthService, private router: Router,\n    private alertify: AlertifyService, private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.bsConfig = {\n      containerClass: 'theme-red'\n    };\n    this.createRegisterForm();\n  }\n\n  createRegisterForm() {\n    this.registerForm = this.fb.group({\n      gender: ['male'],\n      username: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      dateOfBirth: [null, Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\n      confirmPassword: ['', Validators.required]\n    }, {validator: this.passwordMatchValidator});\n  }\n\n  passwordMatchValidator(g: FormGroup) {\n    return g.get('password').value === g.get('confirmPassword').value ? null : {'mismatch': true};\n  }\n\n  register() {\n    if (this.registerForm.valid) {\n      this.user = Object.assign({}, this.registerForm.value);\n      this.authService.register(this.user).subscribe(() => {\n         this.alertify.success('Registration successful');\n      }, error => {\n        this.authService.login(this.user).subscribe(() => {\n          this.router.navigate(['/members']);\n        });\n      });\n    }\n  }\n\n\n  cancel() {\n    this.cancelRegister.emit(false);\n  }\n}\n","import { BlogDetailResolver } from './_resolvers/blog-detail.resolver';\r\nimport { MemberEditResolver } from './_resolvers/member-edit.resolver';\r\nimport { MemberListResolver } from './_resolvers/member-list.resolver';\r\nimport { MyportfolioDetailComponent } from './myportfolio/myportfolio-detail/myportfolio-detail.component';\r\nimport { Routes } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ContactComponent } from './contact/contact.component';\r\nimport { ValueComponent } from './value/value.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MyportfolioListComponent } from './myportfolio/myportfolio-list/myportfolio-list.component';\r\nimport { MemberDetailResolver } from './_resolvers/member-detail.resolver';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { PreventUnsavedChanges } from './_guards/prevent-unsaved-changes.guard';\r\nimport { ListsResolver } from './_resolvers/lists.resolver';\r\nimport { MessagesResolver } from './_resolvers/messages.resolver';\r\nimport { BlogDetailComponent } from './myblog/blog-detail/blog-detail.component';\r\nimport { BlogListComponent } from './myblog/blog-list/blog-list.component';\r\nimport { BlogListResolver } from './_resolvers/blog-list.resolver';\r\nimport { PortfolioListResolver } from './_resolvers/portfolio-list.resolver';\r\nimport { PortfolioDetailResolver } from './_resolvers/portfolio-detail.resolver';\r\nimport { BlogNewComponent } from './myblog/blog-new/blog-new.component';\r\n\r\nexport const appRoutes: Routes = [\r\n   { path: 'home', component: HomeComponent },\r\n   { path: 'portfolio', component: MyportfolioListComponent,\r\n            resolve: { portfolios: PortfolioListResolver }},\r\n    { path: 'portfolio/:id', component: MyportfolioDetailComponent,\r\n             resolve: { portfolio: PortfolioDetailResolver }},\r\n    { path: 'blog', component: BlogListComponent,\r\n             resolve: {blogs: BlogListResolver}},\r\n    { path: 'blog/:id', component: BlogDetailComponent,\r\n             resolve: {blog: BlogDetailResolver}},\r\n    { path: 'contact', component: ContactComponent },\r\n    { path: 'value' , component: ValueComponent },\r\n    { path: 'blog-new' , component: BlogNewComponent },\r\n    {\r\n      path: '',\r\n      runGuardsAndResolvers: 'always',\r\n      canActivate: [AuthGuard],\r\n      children: [\r\n        { path: 'members', component: MemberListComponent,\r\n           resolve: {users: MemberListResolver}},\r\n        { path: 'members/:id', component: MemberDetailComponent,\r\n            resolve: {user: MemberDetailResolver}},\r\n        { path: 'member/edit', component: MemberEditComponent,\r\n            resolve: {user: MemberEditResolver}, canDeactivate: [PreventUnsavedChanges]},\r\n        { path: 'messages', component: MessagesComponent, resolve: { messages: MessagesResolver}},\r\n        { path: 'lists' , component: ListsComponent,  resolve: {users: ListsResolver}},\r\n      ]\r\n    },\r\n    { path: '**', redirectTo: 'home', pathMatch: 'full'},\r\n];\r\n\r\n","module.exports = \"\"","module.exports = \"<p *ngFor=\\\"let value of values\\\">\\n  {{value.id}}, {{value.name}}\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-value',\n  templateUrl: './value.component.html',\n  styleUrls: ['./value.component.css']\n})\nexport class ValueComponent implements OnInit {\n  values: any;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.getValues();\n  }\n\n  getValues() {\n    this.http.get('http://localhost:5000/api/values')\n        .subscribe(response => {\n          this.values = response;\n        }, error => {\n           console.log(error);\n        });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api/'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}